"use client";

import { useMemo, useRef } from "react";
import { ScanForm } from "@/components/ScanForm";
import { useSafeQuery } from "@/hooks/useSafeConvex";
import { api } from "../../convex/_generated/api";
import { Doc } from "../../convex/_generated/dataModel";
import { useUser } from "@clerk/nextjs";

interface Vulnerability {
  vulnerability: string;
  severity: "low" | "medium" | "high" | "critical";
  description: string;
  poc: string;
  fix: string;
  educationalNotes: string;
}

export default function VulnerabilityScanner() {
  const renderCount = useRef(0);
  renderCount.current += 1;
  console.log('VulnerabilityScanner render count:', renderCount.current);

  const { user } = useUser();
<<<<<<< HEAD
  const args = useMemo(() => (!user ? "skip" : {}), [user]);
=======
  const args = useMemo(() => {
    return !user ? "skip" : {};
  }, [user]);
>>>>>>> origin/phase-2-auth-guard
  const { data: scans, isLoading, error } = useSafeQuery(
    api.scans.getScansForUser,
    args
  );

  return (
    <div className="container mx-auto p-4">
      <h1 className="text-2xl font-bold mb-4">Vulnerability Scanner</h1>
      <ScanForm />
      <div className="mt-8">
        <h2 className="text-xl font-bold mb-4">Your Scans</h2>
        {isLoading && <div>Loading scans...</div>}
        {error && (
          <div className="text-red-500">
            Error loading scans: {error.message}
          </div>
        )}
        {scans && scans.length === 0 && <div>No scans found.</div>}
        {scans &&
          scans.map((scan: Doc<"scans">) => (
            <div key={scan._id} className="border p-4 rounded-lg mb-4">
              <p className="font-bold text-lg">{scan.url}</p>
              <p>
                Status:{