
"use client";

import { ScanForm } from "@/components/ScanForm";
import { useQuery } from "convex/react";
import { api } from "../../convex/_generated/api";
import { useUser } from "@clerk/nextjs";

export default function VulnerabilityScanner() {
  const { user } = useUser();
  const scans = useQuery(api.scans.getScansForUser, user ? { userId: user.id } : "skip");

  return (
    <div className="container mx-auto p-4">
      <h1 className="text-2xl font-bold mb-4">Vulnerability Scanner</h1>
      <ScanForm />
      <div className="mt-8">
        <h2 className="text-xl font-bold mb-4">Your Scans</h2>
        {scans?.map((scan) => (
          <div key={scan._id} className="border p-4 rounded-lg mb-4">
            <p className="font-bold text-lg">{scan.url}</p>
            <p>Status: <span className="font-mono bg-gray-200 dark:bg-gray-800 p-1 rounded">{scan.status}</span></p>
            <p>Initiated: {new Date(scan._creationTime).toLocaleString()}</p>
            {scan.report && scan.report.length > 0 && (
              <div className="mt-4">
                <h3 className="font-bold text-lg mb-2">Vulnerabilities Found:</h3>
                <div className="space-y-4">
                  {scan.report.map((vuln, index) => (
                    <div key={index} className="border p-3 rounded-md bg-gray-50 dark:bg-gray-800">
                      <p className="font-semibold text-red-600 dark:text-red-400">{vuln.vulnerability} - <span className={`font-bold ${
                        vuln.severity === 'high' ? 'text-red-700' :
                        vuln.severity === 'medium' ? 'text-orange-500' :
                        vuln.severity === 'low' ? 'text-yellow-500' :
                        'text-gray-500'
                      }`}>{vuln.severity.toUpperCase()}</span></p>
                      <p className="text-sm mt-1">**Description:** {vuln.description}</p>
                      {vuln.poc && <p className="text-sm mt-1">**Proof of Concept:** <code className="bg-gray-200 dark:bg-gray-700 p-1 rounded text-xs">{vuln.poc}</code></p>}
                      {vuln.fix && <p className="text-sm mt-1">**Fix:** {vuln.fix}</p>}
                      {vuln.educationalNotes && <p className="text-sm mt-1">**Educational Notes:** {vuln.educationalNotes}</p>}
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        ))}
      </div>
    </div>
  );
}
